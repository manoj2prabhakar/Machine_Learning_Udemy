print('Hello world')
setwd("~/Documents/ML/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/Simple_Linear_Regression")
dataset = read.csv('Salary_Data.csv')
View(dataset)
View(dataset)
dataset = read.csv('Salary_Data.csv')
# dataset = dataset[, 2:3]
#splitting the data into training and test set
install.packages('caTools')
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split ==TRUE)
test_set = subset(dataset, split ==FALSE)
# training_set[, 2:3] = scale(training_set[, 2:3])
# test_set[, 2:3] = scale(test_set[, 2:3])
#Fitting Simple linear Regression to training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#predict the test set
y_pred = predict(regressor, newdata = test_set)
# install.packages('ggplot2')
summary(regressor)
summary(regressor)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split ==TRUE)
test_set = subset(dataset, split ==FALSE)
# training_set[, 2:3] = scale(training_set[, 2:3])
# test_set[, 2:3] = scale(test_set[, 2:3])
#Fitting Simple linear Regression to training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
dataset = read.csv('Salary_Data.csv')
# dataset = dataset[, 2:3]
#splitting the data into training and test set
install.packages('caTools')
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
install.packages('caTools')
split = sample.split(dataset$Salary, SplitRatio = 2/3)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
library("caTools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
split = sample.split(dataset$Salary, SplitRatio = 2/3)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split ==TRUE)
test_set = subset(dataset, split ==FALSE)
# training_set[, 2:3] = scale(training_set[, 2:3])
# test_set[, 2:3] = scale(test_set[, 2:3])
#Fitting Simple linear Regression to training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#Fitting Simple linear Regression to training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#predict the test set
y_pred = predict(regressor, newdata = test_set)
# install.packages('ggplot2')
summary(regressor)
y_pred
View(dataset)
View(dataset)
View(test_set)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install(ggplot2)
install.packages('ggplot2')
ggplot() +
geom_point(aes(x = training_set$YearsExperience , y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience , y = predict(regressor, newdata = training_set)))
ggplot() +
geom_point(aes(x = training_set$YearsExperience , y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience , y = predict(regressor, newdata = training_set)),
colour = 'blue')
ggplot() +
geom_point(aes(x = training_set$YearsExperience , y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience , y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience( Training Set )') +
xlab(' Years of Experience ') +
ylab(' Salary ')
ggplot() +
geom_point(aes(x = training_set$YearsExperience , y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience , y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience( Training Set )') +
xlab(' Years of Experience ') +
ylab(' Salary ')
ggplot() +
geom_point(aes(x = training_set$YearsExperience , y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = test_set$YearsExperience , y = predict(regressor, newdata = test_set)),
colour = 'blue') +
ggtitle('Salary vs Experience( Training Set )') +
xlab(' Years of Experience ') +
ylab(' Salary ')
ggplot() +
geom_point(aes(x = test_set$YearsExperience , y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience , y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience( Training Set )') +
xlab(' Years of Experience ') +
ylab(' Salary ')
setwd("~/Documents/ML/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Multiple_Linear_Regression")
setwd("~/Documents/ML/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Multiple_Linear_Regression")
dataset = read.csv('50_Startups.csv')
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1,2,3))
View(dataset)
View(dataset)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(test_set)
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = training_set)
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
summary(y_pred)
y_pred
View(test_set)
regressor = lm(formula = Profit ~ R.D.Spend,
data = training_set)
#Predicting the Test set result
y_pred = predict(regressor, newdata = test_set)
y_pred
regressor = lm(formula = Profit ~ .,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
setwd("~/Documents/ML/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression")
dataset = read.csv('Position_Salaries.csv')
View(dataset)
View(dataset)
dataset = dataset[2:3]
