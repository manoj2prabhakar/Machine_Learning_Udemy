colour='blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset) ),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ dataset$Level4,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset) ),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
poly_reg = lm(formula = Salary ~ dataset,
data = dataset)
poly_reg = lm(formula = Salary ~ .,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset) ),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
poly_reg = lm(formula = Salary ~ dataset$Level4,
data = dataset)
View(poly_reg)
View(poly_reg)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset) ),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
dataset$Level5 = dataset$Level^5
poly_reg = lm(formula = Salary ~ dataset$Level4,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset) ),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
poly_reg = lm(formula = Salary ~ dataset$Level5,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset) ),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(poly_reg, newdata = 6.5)
y_pred = predict(poly_reg, newdata = [6.5])
Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting the Linear Regression Model to the dataset
lin_reg = lm(formula = Salary ~ Level,
data = dataset)
#Fitting the Polynomial Regression Model to the dataset
#Building Polynomial Terms
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
dataset$Level5 = dataset$Level^5
poly_reg = lm(formula = Salary ~ dataset$Level4,
data = dataset)
#Visualizing the linear model
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset) ),
colour='blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
#Visualizing the polynomial model
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level2, y = predict(poly_reg, newdata = dataset)),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting the Linear Regression Model to the dataset
lin_reg = lm(formula = Salary ~ Level,
data = dataset)
#Fitting the Polynomial Regression Model to the dataset
#Building Polynomial Terms
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
dataset$Level5 = dataset$Level^5
poly_reg = lm(formula = Salary ~ dataset$Level4,
data = dataset)
#Visualizing the linear model
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset) ),
colour='blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
#Visualizing the polynomial model
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level2, y = predict(poly_reg, newdata = dataset)),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
poly_reg = lm(formula = Salary ~ dataset$Level4,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
y = predict(lin_reg, newdata = data.frame(Level = 6.5))
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
y_pred = predict(poly_reg, newdata = data.frame(Level4 = 6.5))
y_pred = predict(poly_reg, newdata = data.frame(Level = 6.5))
y_pred = predict(poly_reg, newdata = data.frame(Level = 6.5, Level2 = 6.5^2, Level3 = 6.5^3, Level4 = 6.5^4))
View(poly_reg)
View(poly_reg)
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting the Linear Regression Model to the dataset
lin_reg = lm(formula = Salary ~ Level,
data = dataset)
#Fitting the Polynomial Regression Model to the dataset
#Building Polynomial Terms
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
#Visualizing the linear model
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset) ),
colour='blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
#Visualizing the polynomial model
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
#Predicting a new result with linear regression
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
#Predicting a new result with Polynomial regression
y_pred = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = x_grid)),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(Levels = x_grid))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(Level = x_grid))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting the Linear Regression Model to the dataset
lin_reg = lm(formula = Salary ~ Level,
data = dataset)
#Fitting the Polynomial Regression Model to the dataset
#Building Polynomial Terms
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ dataset$Level4,
data = dataset)
#Visualizing the linear model
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset) ),
colour='blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
#Visualizing the polynomial model
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(Level = x_grid))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
#Visualizing the polynomial model
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(Level = x_grid))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting the Linear Regression Model to the dataset
lin_reg = lm(formula = Salary ~ Level,
data = dataset)
#Fitting the Polynomial Regression Model to the dataset
#Building Polynomial Terms
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
#Visualizing the linear model
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset) ),
colour='blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
#Visualizing the polynomial model
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(Level = x_grid))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
#Predicting a new result with linear regression
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
#Predicting a new result with Polynomial regression
y_pred = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(Level = x_grid))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
poly_reg = lm(formula = Salary ~ dataset$Level4,
data = dataset)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(Level = x_grid))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(Level4 = x_grid))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
View(poly_reg)
View(poly_reg)
summary(poly_reg)
poly_reg = lm(formula = Salary ~ dataset$Level4,
data = dataset$Level4)
data = dataset)
poly_reg = lm(formula = Salary ~ Level4,
data = dataset)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(Level4 = x_grid))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
poly_reg = lm(formula = Salary ~ Level4,
data = dataset)
poly_reg = lm(formula = Salary ~ dataset$Level4,
data = dataset)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(Level4 = x_grid))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
poly_reg = lm(formula = Salary ~ x_grid,
data = dataset)
source('~/Documents/ML/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/polynomial_regression_m.R')
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
#Fitting the Linear Regression Model to the dataset
lin_reg = lm(formula = Salary ~ Level,
data = dataset)
#Fitting the Polynomial Regression Model to the dataset
#Building Polynomial Terms
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
#Visualizing the linear model
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset) ),
colour='blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
#Visualizing the polynomial model
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(x_grid))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
#Predicting a new result with linear regression
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
#Predicting a new result with Polynomial regression
y_pred = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(x_grid))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(Level = x_grid))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary ),
colour='red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
colour='blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
